name: VariableDemo
trigger: none
variables:
  MySampleVar01: 'Hello'
  MyName: 'World'
  MyMessage: '$(MySampleVar01) $(MyName)'
  MyMessageTwo: $[format('{0} {1}!!!!', '$(MySampleVar01)', '$(MyName)')]
stages:
  - stage: stage01
    jobs:
      - job: job01
        pool:
          vmImage: 'Ubuntu-16.04'
        steps:
          - checkout: none
          - bash: echo "$(MyMessage)"
            displayName: Show the message variable
          - bash: echo "$MYMESSAGE"
            displayName: Show the message variable as env var
          - bash: echo "$(MyMessageTwo)"
            displayName: Show the message variable
          - pwsh: |
              Write-Host "Message: $(MyMessage)"
              Write-Host "Message: $env:MYMESSAGE"
              Write-Host "Build Number: $(Build.BuildNumber)"
              Write-Host "Build Number: $env:BUILD_BUILDNUMBER"
            displayName: Show the variables as PowerShell Core
          - bash: |
              MyJobSharedVar="my job shared var value"
              echo "##vso[task.setvariable variable=MyJobSharedVar;isOutput=true]$MyJobSharedVar"
            name: myVarDefStep
            displayName: Define a variable as output variable
          - bash: |
              echo "$(myVarDefStep.MyJobSharedVar)"
            displayName: Show the variable as output variable from step
          - bash: |
              MyStageSharedVar="my stage shared var value"
              mkdir -p $(Pipeline.Workspace)/variables
              echo "$MyStageSharedVar" > $(Pipeline.Workspace)/variables/MyStageSharedVar
            displayName: Create a variable to share accross stages
          - publish: $(Pipeline.Workspace)/variables
            artifact: variables
            displayName: Publish the variables as artifact
      - job: job02
        dependsOn: job01
        variables:
          MyJobSharedVar: $[ dependencies.job01.outputs['myVarDefStep.MyJobSharedVar'] ]
        pool:
          vmImage: 'Ubuntu-16.04'
        steps:
          - bash: |
              echo "$(MyJobSharedVar)"
            displayName: Show the variable as pipeline variable
          - bash: |
              echo "$MyJobSharedVar2"
            env:
              MyJobSharedVar2: $(MyJobSharedVar)
            displayName: Show the variable as explicitly defined environment variable
  - stage: stage02
    dependsOn: stage01
    jobs:
      - job: job03
        pool:
          vmImage: 'Ubuntu-16.04'
        steps:
          - checkout: none
          - download: current
            artifact: variables
            displayName: Download the variables artifact
          - bash: |
              MyStageSharedVar=$(cat $(Pipeline.Workspace)/variables/MyStageSharedVar)
              echo "##vso[task.setvariable variable=MyStageSharedVar]$MyStageSharedVar"
            displayName: Read the variables artifact files and create pipeline variables
          - bash: |
              echo "$(MyStageSharedVar)"
            displayName: Show the variable as pipeline variable
          - bash: |
              echo "$MYSTAGESHAREDVAR"
            displayName: Show the variable as environment variable